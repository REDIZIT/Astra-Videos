@top Program { value }

value { Comment | Keyword | ControlFlowKeyword | Bool | Null | Number | String | TypeName | FunctionName | Identifier }

@tokens {
	Comment { "//" char* | "/*" (whitespace* char*)* "*/" }
	Keyword { "class" | "abstract" | "public" | "private" | "override" | "static" | "new" | "void" }
	ControlFlowKeyword {  "return" | "if" | "else" | "for" | "while" | "throw" }

	Bool  { "true" | "false" }
	Null  { "null" }

	TypeName { "string" | "int" | "float" }

	Number { '-'? int frac? exp?  }
	int  { '0' | $[1-9] @digit* }
	frac { '.' @digit+ }
	exp  { $[eE] $[+\-]? @digit+ }

	String { '"' char* '"' | '@"' (whitespace* char*)* '"' | '"' "\\n" '"' }
	char { $[\u{20}\u{21}\u{23}-\u{5b}\u{5d}-\u{10ffff}] }

	whitespace { $[ \n\r\t] }

	Identifier { "Exception" | "List" | "Tokenizer" | "Token_Print" | "Console" | ("Token" ("\n" | ">" | " ")) | "StringBuilder" | "Generator"}

	FunctionName { "TokenizeLine" | "Trim" | "Split" | "Add" | " Tokenize(" | "Generate" | "WriteLine" | "Main" | "Compile" | "Tokenize" | "AppendLine" | "ToString"}

	"{" "}" "[" "]" "," ":"
}

@skip { whitespace }

@external propSource jsonHighlighting from "./highlight"

@detectDelim